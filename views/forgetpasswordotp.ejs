<%- include("./header.ejs")%>


<style>
    .height-100 {
    height: 100vh
}

.card {
    width: 400px;
    border: none;
    height: 300px;
    box-shadow: 0px 5px 20px 0px #d2dae3;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center
}

.card h6 {
    color: red;
    font-size: 20px
}

.inputs input {
    width: 40px;
    height: 40px
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    margin: 0
}

.card-2 {
    background-color: #fff;
    padding: 10px;
    width: 350px;
    height: 100px;
    bottom: -50px;
    left: 20px;
    position: absolute;
    border-radius: 5px
}

.card-2 .content {
    margin-top: 50px
}

.card-2 .content a {
    color: red
}

.form-control:focus {
    box-shadow: none;
    border: 2px solid red
}

.validate {
    border-radius: 20px;
    height: 40px;
    background-color: red;
    border: 1px solid red;
    width: 140px
}
</style>
<div class="container is-flex is-align-items-center is-justify-content-center" style="height: 600px;">
    <form action="/otp" method="post" id="otpform">
        <div class="container height-100 d-flex justify-content-center align-items-center">
            <div class="position-relative">
                <div class="card p-2 text-center">
                    <h6 class="text-primary ">Please enter the one time password <br> to verify your account</h6>
                    <div> <span>A code has been sent to</span> <small>your email</small> </div>
                    <div id="otp" class="inputs d-flex flex-row justify-content-center mt-2"> 
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="first" name="one" maxlength="1" />
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="second" name="two" maxlength="1" />
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="third" name="three" maxlength="1" />
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="fourth" name="four" maxlength="1" />
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="fifth" name="five" maxlength="1" />
                    <input class="m-2 text-center form-control rounded otpinput" type="text" id="sixth" name="six" maxlength="1" />
                    </div>
                    <div class="mt-4"> <button class="button is-primary" id="submitOtpBtn" type="submit" >Validate</button> </div>
                    <div id="errorMessage" class="mt-3 text-danger "></div>
                    <div id="otpTimer" class="has-text-centered mt-3"></div>
                    <div><button id="resendotpbtn" class="button is-ghost">resend otp</button></div>
                </div>
            </div>
        </div>
    </form>
</div>
<%- include("./footer.ejs")%>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
<script>
     var notyf = new Notyf();
    document.addEventListener("DOMContentLoaded", function(event) {
        // OTP input fields
        const first = document.getElementById('first');
        const second = document.getElementById('second');
        const third = document.getElementById('third');
        const fourth = document.getElementById('fourth');
        const fifth = document.getElementById('fifth');
        const sixth = document.getElementById('sixth');
        const resendotpbtn =document.getElementById('resendotpbtn');
        const errorMessage = document.getElementById('errorMessage');
        resendotpbtn.style.display='none';
        function OTPInput() {
            const inputs = document.querySelectorAll('#otp > *[id]');

            for (let i = 0; i < inputs.length; i++) {
                inputs[i].addEventListener('input', function(event) {
                    if (event.inputType === 'deleteContentBackward' && i !== 0) {
                        inputs[i - 1].focus();
                    } else if (event.inputType === 'insertText') {
                        if (i < inputs.length - 1) {
                            inputs[i + 1].focus();
                        }
                    }
                });
            }
        }

        OTPInput();
        resendotpbtn.addEventListener('click',function(){
        resendotpbtn.style.display='none';
        errorMessage.textContent = ""
        let timer = 60;
        const countdown = setInterval(() => {
            document.getElementById('otpTimer').textContent = timer;
            timer--;

            if (timer < 0) {
                clearInterval(countdown);
                document.getElementById('otpTimer').textContent='otp expired'
                resendotpbtn.style.display='flex';
            }
        }, 1000);
        axios.post('/resendotp').then(()=>{
            console.log('succesfully sended resend otp');
        }).catch((error)=>{
            console.log(error.message);
        })
    })
        const form = document.getElementById('otpform');
        form.addEventListener('submit', function(event) {
            event.preventDefault();

            let allNums = true;
            document.querySelectorAll('.otpinput').forEach(input => {
                if (isNaN(Number(input.value))) {
                    allNums = false;
                }
            });

            if (!allNums) {
                errorMessage.textContent = "Enter numbers only";
                setTimeout(function() {
                    errorMessage.textContent = "";
                }, 3000);
                return;
            }

            const firstValue = first.value;
            const secondValue = second.value;
            const thirdValue = third.value;
            const fourthValue = fourth.value;
            const fifthValue = fifth.value;
            const sixthValue = sixth.value;

            if (firstValue && secondValue && thirdValue && fourthValue && fifthValue && sixthValue) {
                axios.post('/otp/forgetpassotp', {
                    first: firstValue,
                    second: secondValue,
                    third: thirdValue,
                    fourth: fourthValue,
                    fifth: fifthValue,
                    sixth: sixthValue
                })
                .then((response) => {
                    console.log(response.data);
                    if(response.data===true){
                    window.location.href='/updatepassword'
                      }else if(response.data===false){
                        document.getElementById('otpTimer').textContent='invalid otp!'
                        }
                })
                .catch((error) => {
                    console.log(error.message);
                });
            } else {
                errorMessage.textContent = "OTP fields can't be empty";
                setTimeout(function() {
                    errorMessage.textContent = "";
                }, 3000);
            }
        });

        // Simple countdown timer for 60 seconds
        let timer = 60;
        const countdown = setInterval(() => {
            document.getElementById('otpTimer').textContent = timer;
            timer--;

            if (timer < 0) {
                clearInterval(countdown);
                document.getElementById('otpTimer').textContent='otp expired'
                resendotpbtn.style.display='flex';
            }
        }, 1000);
    });
   
</script>
